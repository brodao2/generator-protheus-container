# =======================================================
# Generated by "Protheus Generator <%- appVersion %>" on <%- new Date().toLocaleString() %>
# CAUTION:
# - Manual editions can be overwritten
# - Do not use in production environments
# =======================================================

FROM mcr.microsoft.com/mssql/server:2022-latest

USER root
RUN ulimit -n 32000
ENV ACCEPT_EULA=Y
ENV SA_PASSWORD=<%= dbPassword %>

RUN apt update -y

RUN apt-get -y install \
  curl \
  xz-utils \
  libgl1-mesa-glx \
  libxmu6 \
  libxrender1 \
  libxrandr2 \
  libxcursor1 \
  libxinerama1 \
  libxft2 \
  libfreetype6 \
  libfontconfig1 \
  libsm6 \
  libice6 \
  libxext6 \
  libx11-6 \
  vim \
  coreutils

<%-include('../7zip.dockerfile.txt') %>

################################################################################
# Process ODBC
################################################################################
# Adicionar o repositório da Microsoft para o ODBC Driver 17

# Instalar o driver ODBC para SQL Server (msodbcsql17)
RUN apt-get -y install unixodbc-dev msodbcsql17

# Instalar o cliente SQL Server (sqlcmd)
RUN apt-get -y install mssql-tools

# Install MS-SQL ODBC Driver
# RUN curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo
# RUN dnf install -y msodbcsql17

# Criar a configuração do ODBC (editar /etc/odbcinst.ini e /etc/odbc.ini)
RUN echo "[ODBC Driver 17 for SQL Server]" > /etc/odbcinst.ini \
    && echo "Description=Microsoft ODBC Driver 17 for SQL Server" >> /etc/odbcinst.ini \
    && echo "Driver=/opt/microsoft/msodbcsql17/lib64/libmsodbcsql-17.x.so" >> /etc/odbcinst.ini \
    && echo "[MSSQLServer]" > /etc/odbc.ini \
    && echo "Driver=ODBC Driver 17 for SQL Server" >> /etc/odbc.ini \
    && echo "Server=localhost,1433" >> /etc/odbc.ini \
    && echo "Database=Protheus_DB" >> /etc/odbc.ini \
    && echo "UID=<%= dbUser %>" >> /etc/odbc.ini \
    && echo "PWD=<%= dbPassword %>" >> /etc/odbc.ini

################################################################################
# Process Features
################################################################################
# Download features
<% downloadList.forEach(function(download) { %>
RUN mkdir -p <%= download.folder %>
RUN curl -o <%= download.folder %>/<%= download.file %> \
  <%= download.source -%>
<% }) %>

# Decompress features
<% tarList.forEach(function(decompress) { %>
RUN cd <%= decompress.folder %> \
  && tar -xzvf <%= decompress.file %> \
  && rm <%= decompress.file %>
<% }) -%>
<% zipList.forEach(function(decompress) { %>
RUN cd <%= decompress.folder %> \
  && 7zzs x -y <%= decompress.file %> \
  && rm <%= decompress.file %>
<% }) -%>

################################################################################
# DBAccess configuration
################################################################################
RUN /totvs/bin/dbaccess/tools/dbaccesscfg -u <%- dbUser %> -p <%- dbPassword %> \
    -d MSSQL -a SQLCONN -g "LicenseServer=<%- licenseServer %>"

<%- include('../dockerfile.tail.txt', { appVersion: appVersion }) %>

################################################################################
# Final settings
################################################################################
WORKDIR /root
RUN echo "cat /etc/motd" >> ./.bashrc

RUN echo "alias dbmonitor=/totvs/bin/dbaccess/dbmonitor" >> ./.bash_aliases
RUN echo "alias sqlcmd='/opt/mssql-tools/bin/sqlcmd -U sa -P <%= dbPassword %>'" >> ./.bash_aliases

COPY start-sqlserver.sh start-sqlserver.sh
RUN chmod +x start-sqlserver.sh

COPY attach-db.sql attach-db.sql

COPY /etc/init.d/dbaccess.sh /etc/init.d/dbaccess.sh
RUN chmod +x /etc/init.d/dbaccess.sh

ENTRYPOINT [ "/root/start-sqlserver.sh" ]

CMD [ "/bin/bash" ]

EXPOSE 7890
